# =====================================================================
# For a full TOML configuration guide, check the Flower docs:
# https://flower.ai/docs/framework/how-to-configure-pyproject-toml.html
# =====================================================================

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "fedeca_flower"
version = "1.0.0"
description = ""
license = "Apache-2.0"
# Dependencies for your Flower App
dependencies = [
    "flwr[simulation]==1.20.0",
    "pandas>=2.2.3",
    "torch>=2.7.0",
    "lifelines==0.30.0",
]

[tool.hatch.build.targets.wheel]
packages = ["."]

[tool.flwr.app]
publisher = "flwrlabs"

# Point to your ServerApp and ClientApp objects
# Format: "<module>:<object>"
[tool.flwr.app.components]
serverapp = "fedeca_flower.server_app:app"
clientapp = "fedeca_flower.client_app:app"

# Default federation to use when running the app
[tool.flwr.app.config]
nr-iterations = 10 # steps in NewtonRapshon stage
cox-comp-iterations = 10 # rounds for federated Cox
path-to-data = "data/center{}/data.csv"
bootstrap = false # if false, then na√Øve and robust FedECA are executed
bootstrap-iterations = 20
bootstrap-fn = "global" # {"per-client", "global"}

[tool.flwr.federations]
default = "local-simulation"

# Local simulation federation with 4 virtual SuperNodes
[tool.flwr.federations.local-simulation]
options.num-supernodes = 4

# Remote federation example for use with SuperLink
[tool.flwr.federations.remote]
address = "127.0.0.1:9093" # SuperLink Exec API address
insecure = true  # Remove this line to enable TLS
# root-certificates = "<PATH/TO/ca.crt>"  # For TLS setup